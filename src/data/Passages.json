[{
        "bID": 69,
        "bsubmitter": "老张的哲学",
        "btitle": "请少发点不重要的测试数据",
        "bcategory": "技术博文",
        "bcontent": "<p>如果想测试，可以复制粘贴写有意义的，这样也能帮助他人</p>",
        "btraffic": 104,
        "bcommentNum": 0,
        "bUpdateTime": "2020-05-14T11:17:08",
        "bCreateTime": "2020-05-14T11:17:08",
        "bRemark": "如果想测试，可以复制粘贴写有意义的，这样也能帮助他人",
        "IsDeleted": false,
        "href": "/"
    },
    {
        "bID": 64,
        "bsubmitter": "作者2811",
        "btitle": "linux 下 apache启动、停止、重启命令",
        "bcategory": "技术博文",
        "bcontent": "<p>基本的操作方法：</p><p>本文假设你的apahce安装目录为/usr/local/apache2，这些方法适合任何情况</p><p>apahce启动命令：</p><p>推荐/usr/local/apache2/bin/apachectl start apaceh启动</p><p>apache停止命令</p><p>/usr/local/apache2/bin/apachectl stop 停止</p><p>apache重新启动命令：</p><p>/usr/local/apache2/bin/apachectl restart 重启</p><p>要在重启 Apache 服务器时不中断当前的连接，则应运行：</p><p>/usr/local/sbin/apachectl graceful</p><p>如果apache安装成为linux的服务的话，可以用以下命令操作：</p><p>service httpd start 启动</p><p>service httpd restart 重新启动</p><p>service httpd stop 停止服务</p><p>Linux系统为Ubu",
        "btraffic": 67,
        "bcommentNum": 0,
        "bUpdateTime": "2020-05-11T13:26:58",
        "bCreateTime": "2020-05-11T13:26:58",
        "bRemark": "基本的操作方法：本文假设你的apahce安装目录为/usr/local/apache2，这些方法适合任何情况apahce启动命令：推荐/usr/local/apache2/bin/apachectl start apaceh启动apache停止命令/usr/local/apache2/bin/apachectl stop 停止apache重新启动命令：/usr/local/apache2/bin/",
        "IsDeleted": false,
        "href": "/"
    },
    {
        "bID": 50,
        "bsubmitter": "fffff",
        "btitle": "Mvc model验证总结",
        "bcategory": "技术博文",
        "bcontent": "<h2>Model&nbsp;验证总结 </h2><p><a href=\"https://www.cnblogs.com/starksoft/p/5616889.html\" target=\"_blank\">https://www.cnblogs.com/starksoft/p/5616889.html</a></p><p><br></p><p><br></p><p><br></p><p>Model&nbsp;验证总结&nbsp;1</p><p>一．Model&nbsp;验证标记&nbsp;1</p><p>1、启用客户端验证： 1</p><p>2、在&nbsp;Model&nbsp;中加入验证标记&nbsp;2</p><p>3&nbsp;、&nbsp;Model&nbsp;类中可以添加的验证标记：&nbsp;3</p><p>3.1、必填字段 3</p><p>3.2&nbsp;、&nbsp;字段长度 3</p><p>3.3&nbsp;、&nbsp;正则验证 3</p><p>3.4、范围 4</p><p>3.5、服务端参与的验证 4</p><p>3.6、比较 4</p><p>3.7、自定义错",
        "btraffic": 336,
        "bcommentNum": 0,
        "bUpdateTime": "2019-01-01T00:00:00",
        "bCreateTime": "2019-01-01T00:00:00",
        "bRemark": "Model验证总结 https://www.cnblogs.com/starksoft/p/5616889.htmlModel验证总结1一．Model验证标记11、启用客户端验证： 12、在Model中加入验证标记23、Model类中可以添加的验证标记：33.1、必填字段 33.2、字段长度 33.3、正则验证 33.4、范围 43.5、服务端参与的验证 43.6、比较 43.7、自定义错误消息 ",
        "IsDeleted": false,
        "href": "/"
    },
    {
        "bID": 48,
        "bsubmitter": "学习",
        "btitle": "《WebAPI Get请求参数传入输入带有[]不识别问题》",
        "bcategory": "技术博文",
        "bcontent": "<p>在Framwork 体系下 WebAPI项目 会有很多默认特性，例如：Get查询竟然支持三种数组查询方式</p><p>1.https://localhost:44390/api/values?status=1&amp;status=2</p><p>2.https://localhost:44390/api/values?status[]=1&amp;status[]=2</p><p>3.https://localhost:44390/api/values?status[0]=1&amp;status[1]=2</p><p><br></p><p>&lt;img src=\"<span style=\"background-color: rgb(255, 255, 255);\">http://123.206.33.109:7090/images%5C0506120113image.png</span>\" /&gt;</p><p><br></p><p>直到客户端同鞋找到我，才发现第二种在.net core webapi 默认竟然不支持</p><p>于是google了好久加上询问大牛，才找到",
        "btraffic": 144,
        "bcommentNum": 0,
        "bUpdateTime": "2019-01-01T00:00:00",
        "bCreateTime": "2019-01-01T00:00:00",
        "bRemark": "在Framwork 体系下 WebAPI项目 会有很多默认特性，例如：Get查询竟然支持三种数组查询方式1.https://localhost:44390/api/values?status=1status=22.https://localhost:44390/api/values?status[]=1status[]=23.https://localhost:44390/api/values?s",
        "IsDeleted": false,
        "href": "/"
    },
    {
        "bID": 46,
        "bsubmitter": "学习",
        "btitle": ".Net Core 迁移之坑一 《WebAPI Get请求参数传入输入带有[]不识别问题》",
        "bcategory": "技术博文",
        "bcontent": "<p>在Framwork 体系下 WebAPI项目 会有很多默认特性，例如：Get查询竟然支持三种数组查询方式</p><p>1.https://localhost:44390/api/values?status=1&amp;status=2</p><p>2.https://localhost:44390/api/values?status[]=1&amp;status[]=2</p><p>3.https://localhost:44390/api/values?status[0]=1&amp;status[1]=2</p><p><img src=\"https://images2018.cnblogs.com/blog/384514/201807/384514-20180715165114365-1220720659.png\"></p><p>直到客户端同鞋找到我，才发现第二种在.net core webapi 默认竟然不支持</p><p>于是google了好久加上询问大牛，才找到一个解决方案，就是通过&nbsp;Conventions 解决</p><p><img src=\"https:/",
        "btraffic": 109,
        "bcommentNum": 0,
        "bUpdateTime": "2019-01-01T00:00:00",
        "bCreateTime": "2019-01-01T00:00:00",
        "bRemark": "在Framwork 体系下 WebAPI项目 会有很多默认特性，例如：Get查询竟然支持三种数组查询方式1.https://localhost:44390/api/values?status=1status=22.https://localhost:44390/api/values?status[]=1status[]=23.https://localhost:44390/api/values?s",
        "IsDeleted": false,
        "href": "/"
    },
    {
        "bID": 42,
        "bsubmitter": "对对对",
        "btitle": "代码：JS继承 + C# 单例模式",
        "bcategory": "技术博文",
        "bcontent": "<h2>&nbsp;单例模型</h2><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"> &nbsp; public class Singleton\n&nbsp; &nbsp; {\n\n&nbsp; &nbsp; &nbsp; &nbsp; // 定义一个静态变量来保存类的实例\n&nbsp; &nbsp; &nbsp; &nbsp; private static Singleton uniqueInstance;\n&nbsp; &nbsp; &nbsp; &nbsp; // 定义一个标识确保线程同步\n&nbsp; &nbsp; &nbsp; &nbsp; private static readonly object locker = new object();\n&nbsp; &nbsp; &nbsp; &nbsp; // 定义私有构造函数，使外界不能创建该类实例\n&nbsp; &nbsp; &nbsp; &nbsp; private Singleton()\n&nbsp; &nbsp; &nbsp; &nbsp; {\n&nbsp; &",
        "btraffic": 242,
        "bcommentNum": 0,
        "bUpdateTime": "2019-01-01T00:00:00",
        "bCreateTime": "2019-01-01T00:00:00",
        "bRemark": "单例模型  public class Singleton\n  {\n\n    // 定义一个静态变量来保存类的实例\n    private static Singleton uniqueInstance;\n    // 定义一个标识确保线程同步\n    private static readonly object locker = new object();\n    // 定义私有构造函数，使外界不",
        "IsDeleted": false,
        "href": "/"
    }
]